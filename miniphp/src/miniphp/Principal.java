/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniphp;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ricardo
 */
public class Principal extends javax.swing.JFrame {
    
    public File Entrada,S1,S2;
    public String Ruta,Ruta1,Ruta2;
    Reader Lector;
    
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCarga = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCarga.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnCarga.setText("Cargar Archivo");
        btnCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("Ruta");
        jLabel1.setToolTipText("");

        txtRuta.setEnabled(false);

        btnAnalizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnAnalizar.setText("Analizar Archivo");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtInfo.setColumns(20);
        txtInfo.setRows(5);
        txtInfo.setEnabled(false);
        jScrollPane1.setViewportView(txtInfo);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Resultado Analizador Lexico");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(btnCarga, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtRuta))
                            .addComponent(btnAnalizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCarga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaActionPerformed
        // TODO add your handling code here:
        
        String Direccion = System.getProperty("user.home");
        JFileChooser Seleccionar = new JFileChooser(Direccion + "/Desktop");
        Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.php)", "php"));
        Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.txt)", "txt"));        
        Seleccionar.setAcceptAllFileFilterUsed(false);
        Seleccionar.showDialog(this,"Seleccionar");
        Entrada = Seleccionar.getSelectedFile();
        Ruta = Entrada.getAbsolutePath();
        txtRuta.setText(Ruta);
    }//GEN-LAST:event_btnCargaActionPerformed

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        // TODO add your handling code here:
        
        try
        {
            AnalizarArchivo();
        }
        catch(IOException ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed

    public void AnalizarArchivo() throws IOException
    {
        Formato(Ruta);
        FileInputStream Leer = new FileInputStream(Ruta);   
        Lector = new InputStreamReader(Leer);        
        Lexer lexer = new Lexer(Lector);
        String Resultado = "";
        int ContadorError = 0;
        boolean Error = false;
        
         while(true)
        {
            
            Token token = lexer.yylex();
            
            if (token == null)
            {
                if (ContadorError > 0)
                {
                    Error = true;
                }
                Resultado = Resultado + "Fin del Archivo";                
                /* Poner otro metodo*/
                txtInfo.setText(Resultado); // Se muestran todos los resultados obtenidos
                Finalizar(Error,Resultado);
                return;
            }
            
            switch (token)
            {
                case ERROR:
                    Resultado = Resultado + lexer.analizar + " - Error: El simbolo no coincide \n";
                    ContadorError++;
                    break;
                    
                default:
                    //Resultado = Resultado + lexer.analizar + " - Token: "+token+"\n";
                    break;
            }
           
        }
    }
    
    public void Archivos() throws IOException
    {
          
        Ruta1 = Ruta.substring(0, Ruta.length()-3);
        Ruta1 = Ruta1 + "out";

    }
    
    public void Formato(String Ruta) throws IOException
    {
        Archivos();        
        File ATemp = new File (Ruta1);
        
        FileReader N1 = new FileReader(Ruta);        
        BufferedReader L = new BufferedReader(N1);
        
        FileWriter Temp = new FileWriter(Ruta1);

        String Linea = "";
        
        
        while(true)
        {
            Linea = L.readLine();
            if(Linea == null)
            {
                Temp.close();
                break;
            }
            Linea = Linea.toLowerCase() + "\n";
            Temp.write(Linea);
            
        }        
        
        FileReader N2 = new FileReader(ATemp);
        BufferedReader LT = new BufferedReader(N2);
        FileWriter Nuevo = new FileWriter(Ruta);        
        while(true)
        {
            Linea = LT.readLine();
            if (Linea == null)
            {
                Nuevo.close();
                LT.close();
                break;
            }
            
            Nuevo.write(Linea + "\n");
            
        }        
        Files.deleteIfExists(Paths.get(Ruta1));
        
        
        
    }
    
    public void Finalizar(boolean Cond, String Resultado) throws IOException
    {
        File S = new File(Ruta1); //Se crea el archivo .out
        Ruta2 = S.getParent();
        Ruta2 = Ruta2 + "\\errores.txt"; //Se crea el archivo de errores
        File ERR = new File(Ruta2);
        if (Cond == true)
        {
            FileWriter E = new FileWriter(ERR);
            E.write(Resultado);
            E.close();
            Files.deleteIfExists(Paths.get(Ruta1));
        }
        else
        {
            FileReader L = new FileReader(Ruta);
            BufferedReader R  = new BufferedReader(L);
            String Linea;
            FileWriter AS = new FileWriter(Ruta1);
            int i;
            while (true)
            {
                Linea = R.readLine();
                if(Linea ==  null)
                {
                    AS.close();
                    break;
                }
                
                if(Linea.contains("["))
                {
                    for (i=0;i<Linea.length();i++)
                    {
                        if(Character.toString(Linea.charAt(i)).equals("["))
                        {
                            break;
                        }
                        
                    }
                    String Alterna = Linea.substring(0,i+1);
                    Linea = Linea.substring(i+1).toUpperCase();
                    AS.write(Alterna + Linea + "\n");                    
                }
                else
                {
                    Linea = Linea.toLowerCase();
                    AS.write(Linea + "\n");
                }
            }
            
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnCarga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
